---
// @ts-nocheck - Astro bileşenindeki TypeScript hatalarını yok sayıyoruz
import { localizePath } from "astro-i18next";
import i18next from "i18next";
import config from "../../../astro-i18next.config.mjs";

// Mevcut dil
const currentLanguage = i18next.language || "tr";

// Desteklenen diller
const supportedLanguages = config.supportedLanguages;

// Bayrak emoji haritası
// İndeks imzası ile string anahtar kullanımına izin veriyoruz
const flagEmojis: { [key: string]: string } = {
  tr: "🇹🇷",
  en: "🇬🇧",
  de: "🇩🇪",
  fr: "🇫🇷",
  es: "🇪🇸",
  it: "🇮🇹",
  ru: "🇷🇺",
};

// Şu anki sayfa yolu
const pathname = Astro.url.pathname;
---

<div class="relative inline-block text-left group">
  <button
    type="button"
    class="inline-flex items-center justify-center w-full rounded-md px-4 py-2 bg-darkest border border-white-off text-sm font-medium text-white-off hover:text-white hover:border-primary transition-all duration-300 focus:outline-none"
    id="language-menu-button"
    aria-expanded="false"
    aria-haspopup="true"
  >
    <span class="mr-2">{flagEmojis[currentLanguage]}</span>
    <span>{config.languageNames[currentLanguage]}</span>
    <svg
      class="ml-2 h-5 w-5 text-primary"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 20 20"
      fill="currentColor"
      aria-hidden="true"
    >
      <path
        fill-rule="evenodd"
        d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
        clip-rule="evenodd"></path>
    </svg>
  </button>

  <div
    class="hidden group-hover:block absolute right-0 mt-2 w-40 rounded-md shadow-lg bg-darkest ring-1 ring-black ring-opacity-5 focus:outline-none z-50"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="language-menu-button"
    tabindex="-1"
  >
    <div class="py-1" role="none">
      {
        supportedLanguages.map((language: string) => (
          <a
            href={localizePath(pathname, language)}
            class={`flex items-center px-4 py-2 text-sm ${
              language === currentLanguage
                ? "text-primary font-medium"
                : "text-white hover:text-primary"
            }`}
            role="menuitem"
            tabindex="-1"
          >
            <span class="mr-2">{flagEmojis[language]}</span>
            <span>{config.languageNames[language]}</span>
          </a>
        ))
      }
    </div>
  </div>
</div>

<script>
  // Mobil için dil menüsü davranışı
  document.addEventListener("DOMContentLoaded", () => {
    const button = document.getElementById("language-menu-button");
    const menu = button?.nextElementSibling;

    if (button && menu) {
      button.addEventListener("click", () => {
        menu.classList.toggle("hidden");
      });

      // Menüye tıklama dışında herhangi bir yere tıklandığında menüyü kapat
      document.addEventListener("click", (event) => {
        if (
          !button.contains(event.target as Node) &&
          !menu.contains(event.target as Node)
        ) {
          menu.classList.add("hidden");
        }
      });
    }
  });
</script>
